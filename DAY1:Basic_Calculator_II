class Solution {
    public int calculate(String s) {
        
        // storing length
        int n = s.length();

        // base case check
        if ( s==null || n==0) return 0;

        Stack<Integer> stack = new Stack<Integer>();

        int num = 0;

        // since all the integers are positive hence initial sign is +ve
        char sign = '+';

        for (int i = 0; i<n; i++){
            if (Character.isDigit(s.charAt(i))){

                // calculating integer using difference between ascii values
                num = num*10 + s.charAt(i)-'0';
            }

            if (!Character.isDigit(s.charAt(i)) && s.charAt(i)!=' ' || i == n-1){
                if (sign=='-'){
                    stack.push(-num);
                }
                else if (sign=='+'){
                    stack.push(num);
                }
                else if (sign=='*'){
                    stack.push(stack.pop()*num);
                }
                else if (sign=='/'){
                    stack.push(stack.pop()/num);
                }

                sign = s.charAt(i);
                num = 0;
            }
        }

        int res = 0;
        // calculating the remaining addition and subtraction operation
        for (int i : stack){
            res += i;
        }

        return res;

    }
}
